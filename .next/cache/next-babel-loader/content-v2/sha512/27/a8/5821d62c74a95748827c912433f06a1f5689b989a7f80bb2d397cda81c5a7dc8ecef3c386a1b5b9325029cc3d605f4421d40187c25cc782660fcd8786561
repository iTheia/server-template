{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\marti\\\\projects\\\\server-template\\\\components\\\\ProtectedRoute\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport redirect from \"nextjs-redirect\";\nimport { Fragment, useContext } from \"react\";\nimport { AuthContext } from \"../../providers/Auth\";\nvar Redirect = redirect(\"/error\");\n_c = Redirect;\n\nvar ProtectedRoute = function ProtectedRoute(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(AuthContext),\n      currentUser = _useContext.currentUser;\n\n  if (currentUser === false) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(ProtectedRoute, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n\n_c2 = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Redirect\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/marti/projects/server-template/components/ProtectedRoute/index.tsx"],"names":["redirect","Fragment","useContext","AuthContext","Redirect","ProtectedRoute","children","currentUser"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,IAAMC,QAAQ,GAAGJ,QAAQ,CAAC,QAAD,CAAzB;KAAMI,Q;;AAEN,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACbJ,UAAU,CAACC,WAAD,CADG;AAAA,MAC7BI,WAD6B,eAC7BA,WAD6B;;AAErC,MAAIA,WAAW,KAAK,KAApB,EAA2B;AACvB,wBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AACD,sBAAO,QAAC,QAAD;AAAA,cAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,CAND;;GAAMD,c;;MAAAA,c;AAQN,eAAeA,cAAf","sourcesContent":["import redirect from \"nextjs-redirect\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport { AuthContext } from \"../../providers/Auth\";\r\n\r\nconst Redirect = redirect(\"/error\");\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser === false) {\r\n        return <Redirect>...</Redirect>;\r\n    }\r\n    return <Fragment>{children}</Fragment>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}