{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\marti\\\\projects\\\\server-template\\\\providers\\\\App\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport var AppContext = /*#__PURE__*/createContext({\n  isLoading: false,\n  setIsLoading: function setIsLoading() {\n    return null;\n  }\n});\nexport var AppProvider = function AppProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      isLoading: isLoading,\n      setIsLoading: setIsLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AppProvider, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/marti/projects/server-template/providers/App/index.tsx"],"names":["createContext","useState","AppContext","isLoading","setIsLoading","AppProvider","children"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAGA,OAAO,IAAMC,UAAU,gBAAGF,aAAa,CAAc;AACjDG,EAAAA,SAAS,EAAE,KADsC;AAEjDC,EAAAA,YAAY,EAAE;AAAA,WAAM,IAAN;AAAA;AAFmC,CAAd,CAAhC;AAKP,OAAO,IAAMC,WAAqB,GAAG,SAAxBA,WAAwB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACjBL,QAAQ,CAAU,KAAV,CADS;AAAA,MAC5CE,SAD4C;AAAA,MACjCC,YADiC;;AAGnD,sBACI,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,YAAY,EAAZA;AAAb,KAA5B;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CARM;;GAAMD,W;;KAAAA,W","sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { IAppContext } from \"./types\";\r\n\r\nexport const AppContext = createContext<IAppContext>({\r\n    isLoading: false,\r\n    setIsLoading: () => null,\r\n});\r\n\r\nexport const AppProvider: React.FC = ({ children }) => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n    return (\r\n        <AppContext.Provider value={{ isLoading, setIsLoading }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}