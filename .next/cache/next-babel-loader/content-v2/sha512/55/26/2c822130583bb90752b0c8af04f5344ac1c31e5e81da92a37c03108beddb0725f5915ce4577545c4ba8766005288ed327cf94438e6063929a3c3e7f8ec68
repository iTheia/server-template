{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\marti\\\\projects\\\\server-template\\\\providers\\\\Auth\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport JwtDecode from \"jwt-decode\";\nimport Axios from \"axios\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  currentUser: false,\n  signUp: async () => {},\n  logOut: async () => {},\n  logIn: async () => {},\n  getToken: () => \"\"\n});\nconst url = \"\";\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState(false);\n  const {\n    0: token,\n    1: setToken\n  } = useState(\"\");\n  const {\n    setIsLoading\n  } = useContext(AppContext);\n  useEffect(() => {\n    setIsLoading(true);\n    /* authentificar */\n\n    setIsLoading(false);\n  }, [setIsLoading]);\n\n  async function setSession(response) {\n    try {\n      const {\n        data\n      } = response;\n\n      if (data.error) {\n        throw new Error(data.message);\n      }\n\n      const decoded = JwtDecode(data.token);\n      setCurrentUser(prev => _objectSpread(_objectSpread({}, prev), decoded));\n      setToken(data.token);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n    }\n  }\n\n  async function signUp(values) {\n    try {\n      const response = await Axios.post(`${url}/api/v1/auth/signup`, values);\n      setSession(response);\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  async function logOut() {\n    try {\n      await Axios.get(`${url}/api/v1/auth/close`);\n      setToken(\"\");\n      setCurrentUser(false);\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  async function logIn(values) {\n    try {\n      const response = await Axios.post(`${url}/api/v1/auth/login`, values);\n      setSession(response);\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  function getToken() {\n    if (token === \"\") {\n      return \"Bearrer \";\n    }\n\n    const {\n      exp\n    } = JwtDecode(token);\n\n    if (exp < Date.now().valueOf() / 1000) {\n      Axios.get(`${url}/api/v1/auth/refresh`).then(response => setSession(response)).catch(() => {\n        setToken(\"\");\n        setCurrentUser(false);\n      });\n    }\n\n    return `Bearrer ${token}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      getToken,\n      logIn,\n      logOut,\n      signUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/marti/projects/server-template/providers/Auth/index.tsx"],"names":["createContext","useState","useEffect","useContext","AppContext","JwtDecode","Axios","AuthContext","currentUser","signUp","logOut","logIn","getToken","url","AuthProvider","children","setCurrentUser","token","setToken","setIsLoading","setSession","response","data","error","Error","message","decoded","prev","values","post","alert","get","exp","Date","now","valueOf","then","catch"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AAEA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAe;AACnDQ,EAAAA,WAAW,EAAE,KADsC;AAEnDC,EAAAA,MAAM,EAAE,YAAY,CAAE,CAF6B;AAGnDC,EAAAA,MAAM,EAAE,YAAY,CAAE,CAH6B;AAInDC,EAAAA,KAAK,EAAE,YAAY,CAAE,CAJ8B;AAKnDC,EAAAA,QAAQ,EAAE,MAAM;AALmC,CAAf,CAAjC;AAOP,MAAMC,GAAG,GAAG,EAAZ;AAEA,OAAO,MAAMC,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpD,QAAM;AAAA,OAACP,WAAD;AAAA,OAAcQ;AAAd,MAAgCf,QAAQ,CAAgB,KAAhB,CAA9C;AACA,QAAM;AAAA,OAACgB,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAmBhB,UAAU,CAACC,UAAD,CAAnC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;;AACAA,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;;AAMA,iBAAeC,UAAf,CAA0BC,QAA1B,EAA+C;AAC3C,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;;AACA,UAAIC,IAAI,CAACC,KAAT,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAf,CAAN;AACH;;AACD,YAAMC,OAAO,GAAGrB,SAAS,CAACiB,IAAI,CAACL,KAAN,CAAzB;AACAD,MAAAA,cAAc,CAAEW,IAAD,oCAAgBA,IAAhB,GAAyBD,OAAzB,CAAD,CAAd;AACAR,MAAAA,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KATD,CASE,OAAOI,KAAP,EAAc;AACZJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ;;AAED,iBAAeV,MAAf,CAAsBmB,MAAtB,EAAuC;AACnC,QAAI;AACA,YAAMP,QAAQ,GAAG,MAAMf,KAAK,CAACuB,IAAN,CAClB,GAAEhB,GAAI,qBADY,EAEnBe,MAFmB,CAAvB;AAIAR,MAAAA,UAAU,CAACC,QAAD,CAAV;AACH,KAND,CAME,OAAOE,KAAP,EAAc;AACZO,MAAAA,KAAK,CAACP,KAAD,CAAL;AACH;AACJ;;AAED,iBAAeb,MAAf,GAAwB;AACpB,QAAI;AACA,YAAMJ,KAAK,CAACyB,GAAN,CAAW,GAAElB,GAAI,oBAAjB,CAAN;AACAK,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAJD,CAIE,OAAOO,KAAP,EAAc;AACZO,MAAAA,KAAK,CAACP,KAAD,CAAL;AACH;AACJ;;AAED,iBAAeZ,KAAf,CAAqBiB,MAArB,EAAqC;AACjC,QAAI;AACA,YAAMP,QAAQ,GAAG,MAAMf,KAAK,CAACuB,IAAN,CAClB,GAAEhB,GAAI,oBADY,EAEnBe,MAFmB,CAAvB;AAIAR,MAAAA,UAAU,CAACC,QAAD,CAAV;AACH,KAND,CAME,OAAOE,KAAP,EAAc;AACZO,MAAAA,KAAK,CAACP,KAAD,CAAL;AACH;AACJ;;AACD,WAASX,QAAT,GAAoB;AAChB,QAAIK,KAAK,KAAK,EAAd,EAAkB;AACd,aAAO,UAAP;AACH;;AACD,UAAM;AAAEe,MAAAA;AAAF,QAAU3B,SAAS,CAACY,KAAD,CAAzB;;AACA,QAAIe,GAAG,GAAGC,IAAI,CAACC,GAAL,GAAWC,OAAX,KAAuB,IAAjC,EAAuC;AACnC7B,MAAAA,KAAK,CAACyB,GAAN,CAAW,GAAElB,GAAI,sBAAjB,EACKuB,IADL,CACWf,QAAD,IAAcD,UAAU,CAACC,QAAD,CADlC,EAEKgB,KAFL,CAEW,MAAM;AACTnB,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH,OALL;AAMH;;AACD,WAAQ,WAAUC,KAAM,EAAxB;AACH;;AAED,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAAET,MAAAA,WAAF;AAAeI,MAAAA,QAAf;AAAyBD,MAAAA,KAAzB;AAAgCD,MAAAA,MAAhC;AAAwCD,MAAAA;AAAxC,KADX;AAAA,cAGKM;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlFM","sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { IAuthContext, IUser, ILogIn, ISignUp, IResponse } from \"./types\";\r\nimport { AppContext } from \"../App\";\r\nimport JwtDecode from \"jwt-decode\";\r\nimport Axios from \"axios\";\r\n\r\nexport const AuthContext = createContext<IAuthContext>({\r\n    currentUser: false,\r\n    signUp: async () => {},\r\n    logOut: async () => {},\r\n    logIn: async () => {},\r\n    getToken: () => \"\",\r\n});\r\nconst url = \"\";\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<IUser | false>(false);\r\n    const [token, setToken] = useState<string>(\"\");\r\n    const { setIsLoading } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        /* authentificar */\r\n        setIsLoading(false);\r\n    }, [setIsLoading]);\r\n\r\n    async function setSession(response: IResponse) {\r\n        try {\r\n            const { data } = response;\r\n            if (data.error) {\r\n                throw new Error(data.message);\r\n            }\r\n            const decoded = JwtDecode(data.token) as IUser;\r\n            setCurrentUser((prev) => ({ ...prev, ...decoded }));\r\n            setToken(data.token);\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    async function signUp(values: ISignUp) {\r\n        try {\r\n            const response = await Axios.post(\r\n                `${url}/api/v1/auth/signup`,\r\n                values\r\n            );\r\n            setSession(response);\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n    async function logOut() {\r\n        try {\r\n            await Axios.get(`${url}/api/v1/auth/close`);\r\n            setToken(\"\");\r\n            setCurrentUser(false);\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n    async function logIn(values: ILogIn) {\r\n        try {\r\n            const response = await Axios.post(\r\n                `${url}/api/v1/auth/login`,\r\n                values\r\n            );\r\n            setSession(response);\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n    function getToken() {\r\n        if (token === \"\") {\r\n            return \"Bearrer \";\r\n        }\r\n        const { exp } = JwtDecode(token) as any;\r\n        if (exp < Date.now().valueOf() / 1000) {\r\n            Axios.get(`${url}/api/v1/auth/refresh`)\r\n                .then((response) => setSession(response))\r\n                .catch(() => {\r\n                    setToken(\"\");\r\n                    setCurrentUser(false);\r\n                });\r\n        }\r\n        return `Bearrer ${token}`;\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ currentUser, getToken, logIn, logOut, signUp }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}