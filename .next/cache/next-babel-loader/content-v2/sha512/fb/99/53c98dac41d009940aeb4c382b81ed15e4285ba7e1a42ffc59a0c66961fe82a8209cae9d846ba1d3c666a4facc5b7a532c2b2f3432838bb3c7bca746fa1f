{"ast":null,"code":"import { dev } from \"./dev\";\nimport { prod } from \"./prod\";\nexport var config;\nexport var env = \"development\" || \"development\";\n\nswitch (env) {\n  case \"development\":\n    config = dev;\n    break;\n\n  case \"production\":\n    config = prod;\n    break;\n\n  default:\n    config = dev;\n    break;\n}\n\nexport var corsConfig = {\n  origin: function origin(_origin, callback) {\n    if (!_origin) return callback(null, true);\n\n    if (config.allowedOrigin.indexOf(_origin) === -1) {\n      return callback(new Error(\"not allowed\"));\n    }\n\n    return callback(null, true);\n  },\n  credentials: true\n};\nexport var dbConfig = {\n  type: config.database.type,\n  host: config.database.host,\n  port: config.database.port,\n  username: config.database.username,\n  password: config.database.password,\n  database: config.database.database,\n  synchronize: true,\n  logging: true,\n  entities: [\"src/components/**/model.ts\"]\n};","map":{"version":3,"sources":["C:/Users/marti/projects/server-template/server/config/index.ts"],"names":["dev","prod","config","env","corsConfig","origin","callback","allowedOrigin","indexOf","Error","credentials","dbConfig","type","database","host","port","username","password","synchronize","logging","entities"],"mappings":"AACA,SAASA,GAAT,QAAoB,OAApB;AACA,SAASC,IAAT,QAAqB,QAArB;AAGA,OAAO,IAAIC,MAAJ;AAEP,OAAO,IAAMC,GAAG,GAAG,iBAAwB,aAApC;;AAEP,QAAQA,GAAR;AACI,OAAK,aAAL;AACID,IAAAA,MAAM,GAAGF,GAAT;AACA;;AACJ,OAAK,YAAL;AACIE,IAAAA,MAAM,GAAGD,IAAT;AACA;;AACJ;AACIC,IAAAA,MAAM,GAAGF,GAAT;AACA;AATR;;AAYA,OAAO,IAAMI,UAAuB,GAAG;AACnCC,EAAAA,MAAM,EAAE,gBAACA,OAAD,EAASC,QAAT,EAAsB;AAC1B,QAAI,CAACD,OAAL,EAAa,OAAOC,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;;AACb,QAAIJ,MAAM,CAACK,aAAP,CAAqBC,OAArB,CAA6BH,OAA7B,MAAyC,CAAC,CAA9C,EAAiD;AAC7C,aAAOC,QAAQ,CAAC,IAAIG,KAAJ,CAAU,aAAV,CAAD,CAAf;AACH;;AACD,WAAOH,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;AACH,GAPkC;AAQnCI,EAAAA,WAAW,EAAE;AARsB,CAAhC;AAWP,OAAO,IAAMC,QAAQ,GAAG;AACpBC,EAAAA,IAAI,EAAEV,MAAM,CAACW,QAAP,CAAgBD,IADF;AAEpBE,EAAAA,IAAI,EAAEZ,MAAM,CAACW,QAAP,CAAgBC,IAFF;AAGpBC,EAAAA,IAAI,EAAEb,MAAM,CAACW,QAAP,CAAgBE,IAHF;AAIpBC,EAAAA,QAAQ,EAAEd,MAAM,CAACW,QAAP,CAAgBG,QAJN;AAKpBC,EAAAA,QAAQ,EAAEf,MAAM,CAACW,QAAP,CAAgBI,QALN;AAMpBJ,EAAAA,QAAQ,EAAEX,MAAM,CAACW,QAAP,CAAgBA,QANN;AAOpBK,EAAAA,WAAW,EAAE,IAPO;AAQpBC,EAAAA,OAAO,EAAE,IARW;AASpBC,EAAAA,QAAQ,EAAE,CAAC,4BAAD;AATU,CAAjB","sourcesContent":["import { IConfig } from \"./types\";\r\nimport { dev } from \"./dev\";\r\nimport { prod } from \"./prod\";\r\nimport { CorsOptions } from \"cors\";\r\n\r\nexport let config: IConfig;\r\n\r\nexport const env = process.env.NODE_ENV || \"development\";\r\n\r\nswitch (env) {\r\n    case \"development\":\r\n        config = dev;\r\n        break;\r\n    case \"production\":\r\n        config = prod;\r\n        break;\r\n    default:\r\n        config = dev;\r\n        break;\r\n}\r\n\r\nexport const corsConfig: CorsOptions = {\r\n    origin: (origin, callback) => {\r\n        if (!origin) return callback(null, true);\r\n        if (config.allowedOrigin.indexOf(origin) === -1) {\r\n            return callback(new Error(\"not allowed\"));\r\n        }\r\n        return callback(null, true);\r\n    },\r\n    credentials: true,\r\n};\r\n\r\nexport const dbConfig = {\r\n    type: config.database.type,\r\n    host: config.database.host,\r\n    port: config.database.port,\r\n    username: config.database.username,\r\n    password: config.database.password,\r\n    database: config.database.database,\r\n    synchronize: true,\r\n    logging: true,\r\n    entities: [\"src/components/**/model.ts\"],\r\n};\r\n"]},"metadata":{},"sourceType":"module"}